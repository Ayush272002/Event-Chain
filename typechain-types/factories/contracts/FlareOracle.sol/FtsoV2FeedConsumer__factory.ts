/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FtsoV2FeedConsumer,
  FtsoV2FeedConsumerInterface,
} from "../../../contracts/FlareOracle.sol/FtsoV2FeedConsumer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feedIds",
    outputs: [
      {
        internalType: "bytes21",
        name: "",
        type: "bytes21",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFtsoV2CurrentFeedValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_feedValues",
        type: "uint256[]",
      },
      {
        internalType: "int8[]",
        name: "_decimals",
        type: "int8[]",
      },
      {
        internalType: "uint64",
        name: "_timestamp",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405180602001604052807401464c522f5553440000000000000000000000000060581b6affffffffffffffffffffff19166affffffffffffffffffffff19168152506001906001620000599291906200017d565b503480156200006757600080fd5b5062000078620000bd60201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000370565b600073ad67fe66660fb8dfe9d6b1b4240d8650e30f601973ffffffffffffffffffffffffffffffffffffffff1663159354a260405160200162000100906200027a565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401620001349190620002b7565b602060405180830381865afa15801562000152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017891906200033e565b905090565b828054828255906000526020600020908101928215620001e7579160200282015b82811115620001e65782518260006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908360581c0217905550916020019190600101906200019e565b5b509050620001f69190620001fa565b5090565b5b8082111562000215576000816000905550600101620001fb565b5090565b600082825260208201905092915050565b7f4674736f56320000000000000000000000000000000000000000000000000000600082015250565b60006200026260068362000219565b91506200026f826200022a565b602082019050919050565b60006020820190508181036000830152620002958162000253565b9050919050565b6000819050919050565b620002b1816200029c565b82525050565b6000602082019050620002ce6000830184620002a6565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030682620002d9565b9050919050565b6200031881620002f9565b81146200032457600080fd5b50565b60008151905062000338816200030d565b92915050565b600060208284031215620003575762000356620002d4565b5b6000620003678482850162000327565b91505092915050565b6108b580620003806000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b7f433d11461003b578063f601bc8b1461006b575b600080fd5b610055600480360381019061005091906101b2565b61008b565b604051610062919061021a565b60405180910390f35b6100736100b7565b604051610082939291906103e1565b60405180910390f35b6001818154811061009b57600080fd5b906000526020600020016000915054906101000a900460581b81565b60608060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c37574560016040518263ffffffff1660e01b81526004016101179190610549565b600060405180830381865afa158015610134573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061015d91906107f4565b925092509250909192565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61018f8161017c565b811461019a57600080fd5b50565b6000813590506101ac81610186565b92915050565b6000602082840312156101c8576101c7610172565b5b60006101d68482850161019d565b91505092915050565b60007fffffffffffffffffffffffffffffffffffffffffff000000000000000000000082169050919050565b610214816101df565b82525050565b600060208201905061022f600083018461020b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61026a8161017c565b82525050565b600061027c8383610261565b60208301905092915050565b6000602082019050919050565b60006102a082610235565b6102aa8185610240565b93506102b583610251565b8060005b838110156102e65781516102cd8882610270565b97506102d883610288565b9250506001810190506102b9565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008160000b9050919050565b6103358161031f565b82525050565b6000610347838361032c565b60208301905092915050565b6000602082019050919050565b600061036b826102f3565b61037581856102fe565b93506103808361030f565b8060005b838110156103b1578151610398888261033b565b97506103a383610353565b925050600181019050610384565b5085935050505092915050565b600067ffffffffffffffff82169050919050565b6103db816103be565b82525050565b600060608201905081810360008301526103fb8186610295565b9050818103602083015261040f8185610360565b905061041e60408301846103d2565b949350505050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b610460816101df565b82525050565b60006104728383610457565b60208301905092915050565b60008160001c9050919050565b60008160581b9050919050565b60006104a38261048b565b9050919050565b60006104bd6104b88361047e565b610498565b9050919050565b60006104d082546104aa565b9050919050565b6000600182019050919050565b60006104ef82610426565b6104f98185610431565b935061050483610442565b8060005b8381101561053c57610519826104c4565b6105238882610466565b975061052e836104d7565b925050600181019050610508565b5085935050505092915050565b6000602082019050818103600083015261056381846104e4565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105b982610570565b810181811067ffffffffffffffff821117156105d8576105d7610581565b5b80604052505050565b60006105eb610168565b90506105f782826105b0565b919050565b600067ffffffffffffffff82111561061757610616610581565b5b602082029050602081019050919050565b600080fd5b60008151905061063c81610186565b92915050565b6000610655610650846105fc565b6105e1565b9050808382526020820190506020840283018581111561067857610677610628565b5b835b818110156106a1578061068d888261062d565b84526020840193505060208101905061067a565b5050509392505050565b600082601f8301126106c0576106bf61056b565b5b81516106d0848260208601610642565b91505092915050565b600067ffffffffffffffff8211156106f4576106f3610581565b5b602082029050602081019050919050565b61070e8161031f565b811461071957600080fd5b50565b60008151905061072b81610705565b92915050565b600061074461073f846106d9565b6105e1565b9050808382526020820190506020840283018581111561076757610766610628565b5b835b81811015610790578061077c888261071c565b845260208401935050602081019050610769565b5050509392505050565b600082601f8301126107af576107ae61056b565b5b81516107bf848260208601610731565b91505092915050565b6107d1816103be565b81146107dc57600080fd5b50565b6000815190506107ee816107c8565b92915050565b60008060006060848603121561080d5761080c610172565b5b600084015167ffffffffffffffff81111561082b5761082a610177565b5b610837868287016106ab565b935050602084015167ffffffffffffffff81111561085857610857610177565b5b6108648682870161079a565b9250506040610875868287016107df565b915050925092509256fea26469706673582212208fbe89abd148bd9e5d6bdb8a4e376a21ee8212cfe51796189e82bb55ab41ea3c64736f6c63430008130033";

type FtsoV2FeedConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FtsoV2FeedConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FtsoV2FeedConsumer__factory extends ContractFactory {
  constructor(...args: FtsoV2FeedConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FtsoV2FeedConsumer> {
    return super.deploy(overrides || {}) as Promise<FtsoV2FeedConsumer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FtsoV2FeedConsumer {
    return super.attach(address) as FtsoV2FeedConsumer;
  }
  override connect(signer: Signer): FtsoV2FeedConsumer__factory {
    return super.connect(signer) as FtsoV2FeedConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FtsoV2FeedConsumerInterface {
    return new utils.Interface(_abi) as FtsoV2FeedConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FtsoV2FeedConsumer {
    return new Contract(address, _abi, signerOrProvider) as FtsoV2FeedConsumer;
  }
}
