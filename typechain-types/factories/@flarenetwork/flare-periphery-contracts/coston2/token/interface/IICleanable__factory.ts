/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IICleanable,
  IICleanableInterface,
} from "../../../../../../@flarenetwork/flare-periphery-contracts/coston2/token/interface/IICleanable";

const _abi = [
  {
    inputs: [],
    name: "cleanupBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cleanerContract",
        type: "address",
      },
    ],
    name: "setCleanerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "setCleanupBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IICleanable__factory {
  static readonly abi = _abi;
  static createInterface(): IICleanableInterface {
    return new utils.Interface(_abi) as IICleanableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IICleanable {
    return new Contract(address, _abi, signerOrProvider) as IICleanable;
  }
}
