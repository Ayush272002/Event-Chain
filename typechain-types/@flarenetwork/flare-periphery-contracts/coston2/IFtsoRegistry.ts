/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export declare namespace IFtsoRegistry {
  export type PriceInfoStruct = {
    ftsoIndex: PromiseOrValue<BigNumberish>;
    price: PromiseOrValue<BigNumberish>;
    decimals: PromiseOrValue<BigNumberish>;
    timestamp: PromiseOrValue<BigNumberish>;
  };

  export type PriceInfoStructOutput = [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ] & {
    ftsoIndex: BigNumber;
    price: BigNumber;
    decimals: BigNumber;
    timestamp: BigNumber;
  };
}

export interface IFtsoRegistryInterface extends utils.Interface {
  functions: {
    "getAllCurrentPrices()": FunctionFragment;
    "getCurrentPrice(string)": FunctionFragment;
    "getCurrentPrice(uint256)": FunctionFragment;
    "getCurrentPriceWithDecimals(uint256)": FunctionFragment;
    "getCurrentPriceWithDecimals(string)": FunctionFragment;
    "getCurrentPricesByIndices(uint256[])": FunctionFragment;
    "getCurrentPricesBySymbols(string[])": FunctionFragment;
    "getFtso(uint256)": FunctionFragment;
    "getFtsoBySymbol(string)": FunctionFragment;
    "getFtsoIndex(string)": FunctionFragment;
    "getFtsoSymbol(uint256)": FunctionFragment;
    "getFtsos(uint256[])": FunctionFragment;
    "getSupportedFtsos()": FunctionFragment;
    "getSupportedIndices()": FunctionFragment;
    "getSupportedIndicesAndFtsos()": FunctionFragment;
    "getSupportedIndicesAndSymbols()": FunctionFragment;
    "getSupportedIndicesSymbolsAndFtsos()": FunctionFragment;
    "getSupportedSymbols()": FunctionFragment;
    "getSupportedSymbolsAndFtsos()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getAllCurrentPrices"
      | "getCurrentPrice(string)"
      | "getCurrentPrice(uint256)"
      | "getCurrentPriceWithDecimals(uint256)"
      | "getCurrentPriceWithDecimals(string)"
      | "getCurrentPricesByIndices"
      | "getCurrentPricesBySymbols"
      | "getFtso"
      | "getFtsoBySymbol"
      | "getFtsoIndex"
      | "getFtsoSymbol"
      | "getFtsos"
      | "getSupportedFtsos"
      | "getSupportedIndices"
      | "getSupportedIndicesAndFtsos"
      | "getSupportedIndicesAndSymbols"
      | "getSupportedIndicesSymbolsAndFtsos"
      | "getSupportedSymbols"
      | "getSupportedSymbolsAndFtsos"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getAllCurrentPrices",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentPrice(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentPrice(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentPriceWithDecimals(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentPriceWithDecimals(string)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentPricesByIndices",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentPricesBySymbols",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getFtso",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFtsoBySymbol",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFtsoIndex",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFtsoSymbol",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getFtsos",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedFtsos",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedIndices",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedIndicesAndFtsos",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedIndicesAndSymbols",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedIndicesSymbolsAndFtsos",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedSymbols",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSupportedSymbolsAndFtsos",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getAllCurrentPrices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentPrice(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentPrice(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentPriceWithDecimals(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentPriceWithDecimals(string)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentPricesByIndices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentPricesBySymbols",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFtso", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFtsoBySymbol",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFtsoIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFtsoSymbol",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFtsos", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedFtsos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedIndices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedIndicesAndFtsos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedIndicesAndSymbols",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedIndicesSymbolsAndFtsos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedSymbols",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupportedSymbolsAndFtsos",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IFtsoRegistry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IFtsoRegistryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAllCurrentPrices(
      overrides?: CallOverrides
    ): Promise<[IFtsoRegistry.PriceInfoStructOutput[]]>;

    "getCurrentPrice(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _price: BigNumber; _timestamp: BigNumber }
    >;

    "getCurrentPrice(uint256)"(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _price: BigNumber; _timestamp: BigNumber }
    >;

    "getCurrentPriceWithDecimals(uint256)"(
      _assetIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        _price: BigNumber;
        _timestamp: BigNumber;
        _assetPriceUsdDecimals: BigNumber;
      }
    >;

    "getCurrentPriceWithDecimals(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        _price: BigNumber;
        _timestamp: BigNumber;
        _assetPriceUsdDecimals: BigNumber;
      }
    >;

    getCurrentPricesByIndices(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[IFtsoRegistry.PriceInfoStructOutput[]]>;

    getCurrentPricesBySymbols(
      _symbols: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[IFtsoRegistry.PriceInfoStructOutput[]]>;

    getFtso(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string] & { _activeFtsoAddress: string }>;

    getFtsoBySymbol(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string] & { _activeFtsoAddress: string }>;

    getFtsoIndex(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _assetIndex: BigNumber }>;

    getFtsoSymbol(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string] & { _symbol: string }>;

    getFtsos(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[string[]] & { _ftsos: string[] }>;

    getSupportedFtsos(
      overrides?: CallOverrides
    ): Promise<[string[]] & { _ftsos: string[] }>;

    getSupportedIndices(
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { _supportedIndices: BigNumber[] }>;

    getSupportedIndicesAndFtsos(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        _supportedIndices: BigNumber[];
        _ftsos: string[];
      }
    >;

    getSupportedIndicesAndSymbols(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        _supportedIndices: BigNumber[];
        _supportedSymbols: string[];
      }
    >;

    getSupportedIndicesSymbolsAndFtsos(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[], string[]] & {
        _supportedIndices: BigNumber[];
        _supportedSymbols: string[];
        _ftsos: string[];
      }
    >;

    getSupportedSymbols(
      overrides?: CallOverrides
    ): Promise<[string[]] & { _supportedSymbols: string[] }>;

    getSupportedSymbolsAndFtsos(
      overrides?: CallOverrides
    ): Promise<
      [string[], string[]] & { _supportedSymbols: string[]; _ftsos: string[] }
    >;
  };

  getAllCurrentPrices(
    overrides?: CallOverrides
  ): Promise<IFtsoRegistry.PriceInfoStructOutput[]>;

  "getCurrentPrice(string)"(
    _symbol: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { _price: BigNumber; _timestamp: BigNumber }
  >;

  "getCurrentPrice(uint256)"(
    _ftsoIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { _price: BigNumber; _timestamp: BigNumber }
  >;

  "getCurrentPriceWithDecimals(uint256)"(
    _assetIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      _price: BigNumber;
      _timestamp: BigNumber;
      _assetPriceUsdDecimals: BigNumber;
    }
  >;

  "getCurrentPriceWithDecimals(string)"(
    _symbol: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      _price: BigNumber;
      _timestamp: BigNumber;
      _assetPriceUsdDecimals: BigNumber;
    }
  >;

  getCurrentPricesByIndices(
    _indices: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<IFtsoRegistry.PriceInfoStructOutput[]>;

  getCurrentPricesBySymbols(
    _symbols: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<IFtsoRegistry.PriceInfoStructOutput[]>;

  getFtso(
    _ftsoIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFtsoBySymbol(
    _symbol: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFtsoIndex(
    _symbol: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFtsoSymbol(
    _ftsoIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getFtsos(
    _indices: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<string[]>;

  getSupportedFtsos(overrides?: CallOverrides): Promise<string[]>;

  getSupportedIndices(overrides?: CallOverrides): Promise<BigNumber[]>;

  getSupportedIndicesAndFtsos(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], string[]] & {
      _supportedIndices: BigNumber[];
      _ftsos: string[];
    }
  >;

  getSupportedIndicesAndSymbols(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], string[]] & {
      _supportedIndices: BigNumber[];
      _supportedSymbols: string[];
    }
  >;

  getSupportedIndicesSymbolsAndFtsos(
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], string[], string[]] & {
      _supportedIndices: BigNumber[];
      _supportedSymbols: string[];
      _ftsos: string[];
    }
  >;

  getSupportedSymbols(overrides?: CallOverrides): Promise<string[]>;

  getSupportedSymbolsAndFtsos(
    overrides?: CallOverrides
  ): Promise<
    [string[], string[]] & { _supportedSymbols: string[]; _ftsos: string[] }
  >;

  callStatic: {
    getAllCurrentPrices(
      overrides?: CallOverrides
    ): Promise<IFtsoRegistry.PriceInfoStructOutput[]>;

    "getCurrentPrice(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _price: BigNumber; _timestamp: BigNumber }
    >;

    "getCurrentPrice(uint256)"(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _price: BigNumber; _timestamp: BigNumber }
    >;

    "getCurrentPriceWithDecimals(uint256)"(
      _assetIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        _price: BigNumber;
        _timestamp: BigNumber;
        _assetPriceUsdDecimals: BigNumber;
      }
    >;

    "getCurrentPriceWithDecimals(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        _price: BigNumber;
        _timestamp: BigNumber;
        _assetPriceUsdDecimals: BigNumber;
      }
    >;

    getCurrentPricesByIndices(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<IFtsoRegistry.PriceInfoStructOutput[]>;

    getCurrentPricesBySymbols(
      _symbols: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<IFtsoRegistry.PriceInfoStructOutput[]>;

    getFtso(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFtsoBySymbol(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFtsoIndex(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFtsoSymbol(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getFtsos(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    getSupportedFtsos(overrides?: CallOverrides): Promise<string[]>;

    getSupportedIndices(overrides?: CallOverrides): Promise<BigNumber[]>;

    getSupportedIndicesAndFtsos(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        _supportedIndices: BigNumber[];
        _ftsos: string[];
      }
    >;

    getSupportedIndicesAndSymbols(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        _supportedIndices: BigNumber[];
        _supportedSymbols: string[];
      }
    >;

    getSupportedIndicesSymbolsAndFtsos(
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[], string[]] & {
        _supportedIndices: BigNumber[];
        _supportedSymbols: string[];
        _ftsos: string[];
      }
    >;

    getSupportedSymbols(overrides?: CallOverrides): Promise<string[]>;

    getSupportedSymbolsAndFtsos(
      overrides?: CallOverrides
    ): Promise<
      [string[], string[]] & { _supportedSymbols: string[]; _ftsos: string[] }
    >;
  };

  filters: {};

  estimateGas: {
    getAllCurrentPrices(overrides?: CallOverrides): Promise<BigNumber>;

    "getCurrentPrice(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentPrice(uint256)"(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentPriceWithDecimals(uint256)"(
      _assetIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCurrentPriceWithDecimals(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentPricesByIndices(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentPricesBySymbols(
      _symbols: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFtso(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFtsoBySymbol(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFtsoIndex(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFtsoSymbol(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFtsos(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSupportedFtsos(overrides?: CallOverrides): Promise<BigNumber>;

    getSupportedIndices(overrides?: CallOverrides): Promise<BigNumber>;

    getSupportedIndicesAndFtsos(overrides?: CallOverrides): Promise<BigNumber>;

    getSupportedIndicesAndSymbols(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSupportedIndicesSymbolsAndFtsos(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSupportedSymbols(overrides?: CallOverrides): Promise<BigNumber>;

    getSupportedSymbolsAndFtsos(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getAllCurrentPrices(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentPrice(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentPrice(uint256)"(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentPriceWithDecimals(uint256)"(
      _assetIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCurrentPriceWithDecimals(string)"(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentPricesByIndices(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentPricesBySymbols(
      _symbols: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFtso(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFtsoBySymbol(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFtsoIndex(
      _symbol: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFtsoSymbol(
      _ftsoIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFtsos(
      _indices: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedFtsos(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getSupportedIndices(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedIndicesAndFtsos(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedIndicesAndSymbols(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedIndicesSymbolsAndFtsos(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedSymbols(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSupportedSymbolsAndFtsos(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
